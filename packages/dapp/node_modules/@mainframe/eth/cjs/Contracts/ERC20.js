"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _web3Utils = require("web3-utils");

var _ethers = require("ethers");

var _utils = require("../utils");

var _abi = _interopRequireDefault(require("../abi"));

var _BaseContract2 = _interopRequireDefault(require("./BaseContract"));

var ERC20Contract =
/*#__PURE__*/
function (_BaseContract) {
  (0, _inheritsLoose2.default)(ERC20Contract, _BaseContract);

  function ERC20Contract(ethClient, address) {
    return _BaseContract.call(this, ethClient, _abi.default.ERC20, address) || this;
  }

  var _proto = ERC20Contract.prototype;

  _proto.getTokenDecimals =
  /*#__PURE__*/
  function () {
    var _getTokenDecimals = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee() {
      var data;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              data = this.encodeCall('decimals');
              return _context.abrupt("return", this.ethClient.send('eth_call', [{
                data: data,
                to: this.address
              }, 'latest']));

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function getTokenDecimals() {
      return _getTokenDecimals.apply(this, arguments);
    }

    return getTokenDecimals;
  }();

  _proto.getTokenDecimalsUnit =
  /*#__PURE__*/
  function () {
    var _getTokenDecimalsUnit = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee2() {
      var decimals, decimalsString, unit;
      return _regenerator.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return this.getTokenDecimals();

            case 2:
              decimals = _context2.sent;
              decimalsString = Math.pow(10, decimals).toString();
              unit = Object.keys(_utils.unitMap).find(function (unitName) {
                var unit = _utils.unitMap[unitName];
                return decimalsString === unit;
              });

              if (unit) {
                _context2.next = 7;
                break;
              }

              throw new Error('Error getting token decimal unit');

            case 7:
              return _context2.abrupt("return", unit);

            case 8:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    function getTokenDecimalsUnit() {
      return _getTokenDecimalsUnit.apply(this, arguments);
    }

    return getTokenDecimalsUnit;
  }();

  _proto.getTicker =
  /*#__PURE__*/
  function () {
    var _getTicker = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee3() {
      var data, res;
      return _regenerator.default.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              data = this.encodeCall('symbol');
              _context3.next = 3;
              return this.ethClient.send('eth_call', [{
                data: data,
                to: this.address
              }, 'latest']);

            case 3:
              res = _context3.sent;
              return _context3.abrupt("return", (0, _web3Utils.hexToString)(res));

            case 5:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, this);
    }));

    function getTicker() {
      return _getTicker.apply(this, arguments);
    }

    return getTicker;
  }();

  _proto.getBalance =
  /*#__PURE__*/
  function () {
    var _getBalance = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee4(accountAddress) {
      var decimalsUnit, data, res;
      return _regenerator.default.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return this.getTokenDecimalsUnit();

            case 2:
              decimalsUnit = _context4.sent;
              data = this.encodeCall('balanceOf', [accountAddress]);
              _context4.next = 6;
              return this.ethClient.send('eth_call', [{
                data: data,
                to: this.address
              }, 'latest']);

            case 6:
              res = _context4.sent;
              return _context4.abrupt("return", _ethers.utils.formatUnits(res, decimalsUnit));

            case 8:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4, this);
    }));

    function getBalance(_x) {
      return _getBalance.apply(this, arguments);
    }

    return getBalance;
  }();

  _proto.transfer =
  /*#__PURE__*/
  function () {
    var _transfer = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee5(params) {
      var decimalsUnit, valueWei, data, txParams;
      return _regenerator.default.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return this.getTokenDecimalsUnit();

            case 2:
              decimalsUnit = _context5.sent;
              valueWei = _ethers.utils.parseUnits(params.value, decimalsUnit);
              data = this.encodeCall('transfer', [params.to, valueWei]);
              txParams = {
                from: params.from,
                to: this.address,
                data: data
              };
              return _context5.abrupt("return", this.ethClient.sendAndListen(txParams, params.confirmations));

            case 7:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, this);
    }));

    function transfer(_x2) {
      return _transfer.apply(this, arguments);
    }

    return transfer;
  }();

  _proto.approve =
  /*#__PURE__*/
  function () {
    var _approve = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee6(address, amount, options) {
      var decimalsUnit, valueWei, data, txParams;
      return _regenerator.default.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return this.getTokenDecimalsUnit();

            case 2:
              decimalsUnit = _context6.sent;
              valueWei = _ethers.utils.parseUnits(String(amount), decimalsUnit);
              data = this.encodeCall('approve', [address, valueWei]);
              txParams = (0, _extends2.default)({}, options, {
                to: this.address,
                data: data
              });
              return _context6.abrupt("return", this.ethClient.sendAndListen(txParams));

            case 7:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6, this);
    }));

    function approve(_x3, _x4, _x5) {
      return _approve.apply(this, arguments);
    }

    return approve;
  }();

  return ERC20Contract;
}(_BaseContract2.default);

exports.default = ERC20Contract;