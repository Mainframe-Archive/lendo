"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
var _exportNames = {};
exports.default = void 0;

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _Eth = _interopRequireDefault(require("./apis/Eth"));

var _Comms = _interopRequireDefault(require("./apis/Comms"));

var _Storage = _interopRequireDefault(require("./apis/Storage"));

var _Contacts = _interopRequireDefault(require("./apis/Contacts"));

var _Payments = _interopRequireDefault(require("./apis/Payments"));

var _types = require("./types");

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _types[key];
});

/* eslint-env browser */
var MainframeSDK =
/*#__PURE__*/
function () {
  function MainframeSDK() {
    var _this = this;

    (0, _defineProperty2.default)(this, "_rpc", void 0);
    (0, _defineProperty2.default)(this, "_ethereum", void 0);
    (0, _defineProperty2.default)(this, "comms", void 0);
    (0, _defineProperty2.default)(this, "storage", void 0);
    (0, _defineProperty2.default)(this, "contacts", void 0);
    (0, _defineProperty2.default)(this, "payments", void 0);
    (0, _defineProperty2.default)(this, "apiVersion", function () {
      return _this._rpc.request('api_version');
    });

    if (window.mainframe) {
      this._rpc = window.mainframe.rpc;
    } else {
      throw new Error('Cannot find expected mainframe client instance');
    }

    this.comms = new _Comms.default(this._rpc);
    this.storage = new _Storage.default(this._rpc);
    this.contacts = new _Contacts.default(this._rpc);
    this.payments = new _Payments.default(this);
  }

  (0, _createClass2.default)(MainframeSDK, [{
    key: "ethereum",
    get: function get() {
      // Lazy load Eth API's as provider
      // engine will start fetching blocks
      if (!this._ethereum) {
        this._ethereum = new _Eth.default(this);
      }

      return this._ethereum;
    }
  }]);
  return MainframeSDK;
}();

exports.default = MainframeSDK;