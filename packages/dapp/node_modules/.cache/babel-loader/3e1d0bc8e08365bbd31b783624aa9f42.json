{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _ClientAPIs2 = _interopRequireDefault(require(\"../ClientAPIs\"));\n\nvar CommsAPIs =\n/*#__PURE__*/\nfunction (_ClientAPIs) {\n  (0, _inheritsLoose2.default)(CommsAPIs, _ClientAPIs);\n\n  function CommsAPIs() {\n    return _ClientAPIs.apply(this, arguments) || this;\n  }\n\n  var _proto = CommsAPIs.prototype;\n\n  _proto.publish =\n  /*#__PURE__*/\n  function () {\n    var _publish = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee(contactID, key, value) {\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this._rpc.request('comms_publish', {\n                contactID: contactID,\n                key: key,\n                value: value\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function publish(_x, _x2, _x3) {\n      return _publish.apply(this, arguments);\n    }\n\n    return publish;\n  }();\n\n  _proto.subscribe =\n  /*#__PURE__*/\n  function () {\n    var _subscribe = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee2(contactID, key) {\n      var _this = this;\n\n      var subscription, unsubscribe;\n      return _regenerator.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this._rpc.request('comms_subscribe', {\n                contactID: contactID,\n                key: key\n              });\n\n            case 2:\n              subscription = _context2.sent;\n\n              unsubscribe = function unsubscribe() {\n                return _this._rpc.request('sub_unsubscribe', {\n                  id: subscription\n                });\n              };\n\n              return _context2.abrupt(\"return\", _rxjs.Observable.create(function (observer) {\n                _this._rpc.subscribe({\n                  next: function next(msg) {\n                    if (msg.method === 'comms_subscription' && msg.params != null && msg.params.subscription === subscription) {\n                      var result = msg.params.result;\n\n                      if (result != null) {\n                        try {\n                          observer.next(result);\n                        } catch (err) {\n                          // eslint-disable-next-line no-console\n                          console.warn('Error handling message', result, err);\n                        }\n                      }\n                    }\n                  },\n                  error: function error(err) {\n                    observer.error(err);\n                    unsubscribe();\n                  },\n                  complete: function complete() {\n                    observer.complete();\n                    unsubscribe();\n                  }\n                });\n\n                return unsubscribe;\n              }));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function subscribe(_x4, _x5) {\n      return _subscribe.apply(this, arguments);\n    }\n\n    return subscribe;\n  }();\n\n  _proto.getSubscribable =\n  /*#__PURE__*/\n  function () {\n    var _getSubscribable = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee3(contactID) {\n      return _regenerator.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", this._rpc.request('comms_getSubscribable', {\n                contactID: contactID\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function getSubscribable(_x6) {\n      return _getSubscribable.apply(this, arguments);\n    }\n\n    return getSubscribable;\n  }();\n\n  return CommsAPIs;\n}(_ClientAPIs2.default);\n\nexports.default = CommsAPIs;","map":null,"metadata":{},"sourceType":"script"}