{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _ClientAPIs2 = _interopRequireDefault(require(\"../ClientAPIs\"));\n\nvar PaymentAPIs =\n/*#__PURE__*/\nfunction (_ClientAPIs) {\n  (0, _inheritsLoose2.default)(PaymentAPIs, _ClientAPIs);\n\n  function PaymentAPIs(sdk) {\n    var _this;\n\n    _this = _ClientAPIs.call(this, sdk._rpc) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"_sdk\", void 0);\n    _this._sdk = sdk;\n    return _this;\n  }\n\n  var _proto = PaymentAPIs.prototype;\n\n  _proto.payContact =\n  /*#__PURE__*/\n  function () {\n    var _payContact = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee(params) {\n      var contactID, currency, value, contact, accounts, sendParams;\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              contactID = params.contactID, currency = params.currency, value = params.value;\n\n              if (contactID) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return this._sdk.contacts.selectContact();\n\n            case 4:\n              contact = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.next = 9;\n              return this._sdk.contacts.getDataForContact(contactID);\n\n            case 9:\n              contact = _context.sent;\n\n            case 10:\n              if (contact) {\n                _context.next = 12;\n                break;\n              }\n\n              throw new Error('No contact selected');\n\n            case 12:\n              if (!(!contact.data || !contact.data.profile.ethAddress)) {\n                _context.next = 14;\n                break;\n              }\n\n              throw new Error(\"No ETH address found for contact: \" + contact.id);\n\n            case 14:\n              _context.next = 16;\n              return this._sdk.ethereum.getAccounts();\n\n            case 16:\n              accounts = _context.sent;\n\n              if (!(!accounts || !accounts.length)) {\n                _context.next = 19;\n                break;\n              }\n\n              throw new Error(\"No wallets found\");\n\n            case 19:\n              sendParams = {\n                from: accounts[0],\n                to: contact.data.profile.ethAddress,\n                value: value\n              };\n              _context.t0 = currency;\n              _context.next = _context.t0 === 'MFT' ? 23 : _context.t0 === 'ETH' ? 24 : 25;\n              break;\n\n            case 23:\n              return _context.abrupt(\"return\", this._sdk.ethereum.sendMFT(sendParams));\n\n            case 24:\n              return _context.abrupt(\"return\", this._sdk.ethereum.sendETH(sendParams));\n\n            case 25:\n              throw new Error(\"Unsupported currency type: \" + currency);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function payContact(_x) {\n      return _payContact.apply(this, arguments);\n    }\n\n    return payContact;\n  }();\n\n  return PaymentAPIs;\n}(_ClientAPIs2.default);\n\nexports.default = PaymentAPIs;","map":null,"metadata":{},"sourceType":"script"}