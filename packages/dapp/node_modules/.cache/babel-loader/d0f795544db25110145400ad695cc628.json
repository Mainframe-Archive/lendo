{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _web3Utils = require(\"web3-utils\");\n\nvar _ethers = require(\"ethers\");\n\nvar _utils = require(\"../utils\");\n\nvar _abi = _interopRequireDefault(require(\"../abi\"));\n\nvar _BaseContract2 = _interopRequireDefault(require(\"./BaseContract\"));\n\nvar ERC20Contract =\n/*#__PURE__*/\nfunction (_BaseContract) {\n  (0, _inheritsLoose2.default)(ERC20Contract, _BaseContract);\n\n  function ERC20Contract(ethClient, address) {\n    return _BaseContract.call(this, ethClient, _abi.default.ERC20, address) || this;\n  }\n\n  var _proto = ERC20Contract.prototype;\n\n  _proto.getTokenDecimals =\n  /*#__PURE__*/\n  function () {\n    var _getTokenDecimals = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee() {\n      var data;\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = this.encodeCall('decimals');\n              return _context.abrupt(\"return\", this.ethClient.send('eth_call', [{\n                data: data,\n                to: this.address\n              }, 'latest']));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function getTokenDecimals() {\n      return _getTokenDecimals.apply(this, arguments);\n    }\n\n    return getTokenDecimals;\n  }();\n\n  _proto.getTokenDecimalsUnit =\n  /*#__PURE__*/\n  function () {\n    var _getTokenDecimalsUnit = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee2() {\n      var decimals, decimalsString, unit;\n      return _regenerator.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.getTokenDecimals();\n\n            case 2:\n              decimals = _context2.sent;\n              decimalsString = Math.pow(10, decimals).toString();\n              unit = Object.keys(_utils.unitMap).find(function (unitName) {\n                var unit = _utils.unitMap[unitName];\n                return decimalsString === unit;\n              });\n\n              if (unit) {\n                _context2.next = 7;\n                break;\n              }\n\n              throw new Error('Error getting token decimal unit');\n\n            case 7:\n              return _context2.abrupt(\"return\", unit);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getTokenDecimalsUnit() {\n      return _getTokenDecimalsUnit.apply(this, arguments);\n    }\n\n    return getTokenDecimalsUnit;\n  }();\n\n  _proto.getTicker =\n  /*#__PURE__*/\n  function () {\n    var _getTicker = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee3() {\n      var data, res;\n      return _regenerator.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = this.encodeCall('symbol');\n              _context3.next = 3;\n              return this.ethClient.send('eth_call', [{\n                data: data,\n                to: this.address\n              }, 'latest']);\n\n            case 3:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", (0, _web3Utils.hexToString)(res));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function getTicker() {\n      return _getTicker.apply(this, arguments);\n    }\n\n    return getTicker;\n  }();\n\n  _proto.getBalance =\n  /*#__PURE__*/\n  function () {\n    var _getBalance = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee4(accountAddress) {\n      var decimalsUnit, data, res;\n      return _regenerator.default.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.getTokenDecimalsUnit();\n\n            case 2:\n              decimalsUnit = _context4.sent;\n              data = this.encodeCall('balanceOf', [accountAddress]);\n              _context4.next = 6;\n              return this.ethClient.send('eth_call', [{\n                data: data,\n                to: this.address\n              }, 'latest']);\n\n            case 6:\n              res = _context4.sent;\n              return _context4.abrupt(\"return\", _ethers.utils.formatUnits(res, decimalsUnit));\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function getBalance(_x) {\n      return _getBalance.apply(this, arguments);\n    }\n\n    return getBalance;\n  }();\n\n  _proto.transfer =\n  /*#__PURE__*/\n  function () {\n    var _transfer = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee5(params) {\n      var decimalsUnit, valueWei, data, txParams;\n      return _regenerator.default.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.getTokenDecimalsUnit();\n\n            case 2:\n              decimalsUnit = _context5.sent;\n              valueWei = _ethers.utils.parseUnits(params.value, decimalsUnit);\n              data = this.encodeCall('transfer', [params.to, valueWei]);\n              txParams = {\n                from: params.from,\n                to: this.address,\n                data: data\n              };\n              return _context5.abrupt(\"return\", this.ethClient.sendAndListen(txParams, params.confirmations));\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function transfer(_x2) {\n      return _transfer.apply(this, arguments);\n    }\n\n    return transfer;\n  }();\n\n  _proto.approve =\n  /*#__PURE__*/\n  function () {\n    var _approve = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee6(address, amount, options) {\n      var decimalsUnit, valueWei, data, txParams;\n      return _regenerator.default.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.getTokenDecimalsUnit();\n\n            case 2:\n              decimalsUnit = _context6.sent;\n              valueWei = _ethers.utils.parseUnits(String(amount), decimalsUnit);\n              data = this.encodeCall('approve', [address, valueWei]);\n              txParams = (0, _extends2.default)({}, options, {\n                to: this.address,\n                data: data\n              });\n              return _context6.abrupt(\"return\", this.ethClient.sendAndListen(txParams));\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    function approve(_x3, _x4, _x5) {\n      return _approve.apply(this, arguments);\n    }\n\n    return approve;\n  }();\n\n  return ERC20Contract;\n}(_BaseContract2.default);\n\nexports.default = ERC20Contract;","map":null,"metadata":{},"sourceType":"script"}