{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _eventemitter = _interopRequireDefault(require(\"eventemitter3\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar RpcProvider =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  (0, _inheritsLoose2.default)(RpcProvider, _EventEmitter);\n\n  function RpcProvider(rpc) {\n    var _this;\n\n    _this = _EventEmitter.call(this) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"_rpc\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"_requestId\", 1);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"subscriptions\", {});\n    _this._rpc = rpc;\n    return _this;\n  }\n\n  var _proto = RpcProvider.prototype;\n\n  _proto.send =\n  /*#__PURE__*/\n  function () {\n    var _send = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee(method, params) {\n      var _this2 = this;\n\n      var result, payload, subscription, unsubscribe, sub, unsub;\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              payload = {\n                id: this._requestId++,\n                jsonrpc: '2.0',\n                params: params,\n                method: method\n              };\n\n              if (!(method === 'eth_unsubscribe')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return this._rpc.request('blockchain_ethUnsubscribe', {\n                id: params[0]\n              });\n\n            case 4:\n              result = _context.sent;\n              _context.next = 21;\n              break;\n\n            case 7:\n              if (!(method === 'eth_subscribe')) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.next = 10;\n              return this._rpc.request('blockchain_ethSubscribe', payload);\n\n            case 10:\n              subscription = _context.sent;\n\n              unsubscribe = function unsubscribe() {\n                var unsubPayload = {\n                  id: _this2._requestId++,\n                  jsonrpc: '2.0',\n                  params: [subscription],\n                  method: 'eth_unsubscribe'\n                };\n                return _this2._rpc.request('blockchain_ethSend', unsubPayload);\n              };\n\n              sub = _rxjs.Observable.create(function (observer) {\n                _this2._rpc.subscribe({\n                  next: function next(msg) {\n                    if (msg.method === 'eth_blockchain_subscription' && msg.params != null && msg.params.subscription === subscription) {\n                      observer.next(msg);\n                    }\n                  },\n                  error: function error(err) {\n                    observer.error(err);\n                    unsubscribe();\n                  },\n                  complete: function complete() {\n                    observer.complete();\n                    unsubscribe();\n                  }\n                });\n\n                return unsubscribe;\n              });\n              unsub = sub.subscribe(function (value) {\n                _this2.emit('data', value);\n              });\n              this.subscriptions[subscription] = unsub;\n              result = subscription;\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.next = 20;\n              return this._rpc.request('blockchain_ethSend', payload);\n\n            case 20:\n              result = _context.sent;\n\n            case 21:\n              return _context.abrupt(\"return\", result);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function send(_x, _x2) {\n      return _send.apply(this, arguments);\n    }\n\n    return send;\n  }();\n\n  return RpcProvider;\n}(_eventemitter.default);\n\nexports.default = RpcProvider;","map":null,"metadata":{},"sourceType":"script"}