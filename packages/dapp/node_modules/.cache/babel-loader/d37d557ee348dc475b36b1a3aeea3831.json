{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _eth = require(\"@mainframe/eth\");\n\nvar _RPCProvider = _interopRequireDefault(require(\"../RPCProvider\"));\n\nvar _MFWeb3Provider = _interopRequireDefault(require(\"../MFWeb3Provider\"));\n\nvar _ClientAPIs2 = _interopRequireDefault(require(\"../ClientAPIs\"));\n\nvar MFT_TOKEN_ADDRESSES = {\n  ropsten: '0xa46f1563984209fe47f8236f8b01a03f03f957e4',\n  mainnet: '0xdf2c7238198ad8b389666574f2d8bc411a4b7428'\n};\n\nvar WalletProvider =\n/*#__PURE__*/\nfunction () {\n  function WalletProvider(rpc) {\n    (0, _defineProperty2.default)(this, \"_rpc\", void 0);\n    this._rpc = rpc;\n  }\n\n  var _proto = WalletProvider.prototype;\n\n  _proto.getAccounts =\n  /*#__PURE__*/\n  function () {\n    var _getAccounts = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee() {\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this._rpc.request('wallet_getEthAccounts'));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function getAccounts() {\n      return _getAccounts.apply(this, arguments);\n    }\n\n    return getAccounts;\n  }();\n\n  _proto.signTransaction =\n  /*#__PURE__*/\n  function () {\n    var _signTransaction = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee2(params) {\n      return _regenerator.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", this._rpc.request('wallet_signEthTx', params));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function signTransaction(_x) {\n      return _signTransaction.apply(this, arguments);\n    }\n\n    return signTransaction;\n  }();\n\n  _proto.sign =\n  /*#__PURE__*/\n  function () {\n    var _sign = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee3(params) {\n      return _regenerator.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", this._rpc.request('wallet_signEthData', params));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function sign(_x2) {\n      return _sign.apply(this, arguments);\n    }\n\n    return sign;\n  }();\n\n  return WalletProvider;\n}();\n\nvar subscribe =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee4(rpc, rpcMethod, subMethod) {\n    var subscription, unsubscribe;\n    return _regenerator.default.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return rpc.request(rpcMethod);\n\n          case 2:\n            subscription = _context4.sent;\n\n            unsubscribe = function unsubscribe() {\n              return rpc.request('sub_unsubscribe', {\n                id: subscription\n              });\n            };\n\n            return _context4.abrupt(\"return\", _rxjs.Observable.create(function (observer) {\n              rpc.subscribe({\n                next: function next(msg) {\n                  if (msg.method === subMethod && msg.params != null && msg.params.subscription === subscription.id) {\n                    var result = msg.params.result;\n\n                    if (result != null) {\n                      try {\n                        observer.next(result);\n                      } catch (err) {\n                        // eslint-disable-next-line no-console\n                        console.warn('Error handling message', result, err);\n                      }\n                    }\n                  }\n                },\n                error: function error(err) {\n                  observer.error(err);\n                  unsubscribe();\n                },\n                complete: function complete() {\n                  observer.complete();\n                  unsubscribe();\n                }\n              });\n              return unsubscribe;\n            }));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function subscribe(_x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar EthAPIs =\n/*#__PURE__*/\nfunction (_ClientAPIs) {\n  (0, _inheritsLoose2.default)(EthAPIs, _ClientAPIs);\n\n  function EthAPIs(sdk) {\n    var _this;\n\n    _this = _ClientAPIs.call(this, sdk._rpc) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"_web3Provider\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"_ethClient\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"_sdk\", void 0);\n    _this._sdk = sdk;\n    var subscriptions = {\n      accountsChanged: function accountsChanged() {\n        return subscribe(sdk._rpc, 'wallet_subEthAccountsChanged', 'eth_accounts_subscription');\n      },\n      networkChanged: function networkChanged() {\n        return subscribe(sdk._rpc, 'blockchain_subscribeNetworkChanged', 'eth_network_subscription');\n      }\n    };\n    var rpcProvider = new _RPCProvider.default(sdk._rpc);\n    var walletProvider = new WalletProvider(sdk._rpc);\n    _this._ethClient = new _eth.EthClient(rpcProvider, walletProvider, subscriptions);\n    _this._web3Provider = new _MFWeb3Provider.default(_this._ethClient);\n    rpcProvider.on('data', function (res) {\n      _this._web3Provider.emit && _this._web3Provider.emit('data', res);\n    });\n\n    _this._ethClient.on('eth_subscription', function (value) {\n      _this.emit('eth_subscription', value);\n\n      _this._web3Provider.emit && _this._web3Provider.emit('eth_subscription', value);\n    });\n\n    _this._ethClient.on('accountsChanged', function (value) {\n      _this.emit('accountsChanged', value);\n\n      _this._web3Provider.emit && _this._web3Provider.emit('accountsChanged', value);\n    });\n\n    _this._ethClient.on('networkChanged', function (value) {\n      _this.emit('networkChanged', value);\n\n      _this._web3Provider.emit && _this._web3Provider.emit('networkChanged', value);\n    });\n\n    return _this;\n  }\n\n  var _proto2 = EthAPIs.prototype;\n\n  _proto2.getAccounts = function getAccounts() {\n    return this._ethClient.getAccounts();\n  };\n\n  _proto2.getDefaultAccount =\n  /*#__PURE__*/\n  function () {\n    var _getDefaultAccount = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee5() {\n      var accounts;\n      return _regenerator.default.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this._ethClient.getAccounts();\n\n            case 2:\n              accounts = _context5.sent;\n              return _context5.abrupt(\"return\", accounts ? accounts[0] : undefined);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function getDefaultAccount() {\n      return _getDefaultAccount.apply(this, arguments);\n    }\n\n    return getDefaultAccount;\n  }();\n\n  _proto2.sign = function sign(message, address) {\n    return this._ethClient.signMessage(message, address);\n  };\n\n  _proto2.sendETH = function sendETH(params) {\n    return this._ethClient.sendETH(params);\n  };\n\n  _proto2.sendMFT = function sendMFT(params) {\n    if (!this._ethClient._networkName) {\n      throw new Error('Unable to establish Ethereum network');\n    }\n\n    var tokenAddress = MFT_TOKEN_ADDRESSES[this._ethClient._networkName];\n\n    if (!tokenAddress) {\n      throw new Error(\"MFT contract not available on \" + this._ethClient._networkName);\n    }\n\n    var contract = this._ethClient.erc20Contract(tokenAddress);\n\n    return contract.transfer(params);\n  };\n\n  (0, _createClass2.default)(EthAPIs, [{\n    key: \"web3Provider\",\n    get: function get() {\n      return this._web3Provider;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this._ethClient.networkID;\n    }\n  }]);\n  return EthAPIs;\n}(_ClientAPIs2.default);\n\nexports.default = EthAPIs;","map":null,"metadata":{},"sourceType":"script"}